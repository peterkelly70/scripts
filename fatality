#!/bin/bash
# This script takes the branch name in the format WRNNNNN-Other-text
# It strips the WR number out and puts the new wr+message as commit message
# if no errors, it then pushes the current  branch up to origin
usage() {                                      # Function: Print a help message.
  echo "Usage: $0 [ -n ] [ -h ]" 1>&2 
  echo "-n: demo, do not process" 1>&2
  echo "-h: help, you're reading it" 1>&2
}
exit_abnormal() {                              # Function: Exit with error.
  usage
  exit 1
}
while getopts ":nh" options; do              
  case "${options}" in                         
    n )                                         
      demo="yes"                                   
      ;;
    h ) 
     usage
     exit 0
     ;;
  esac
done
                         
branch=$(git rev-parse --abbrev-ref HEAD);
if [ $branch == "PROD" ]; then
   echo "You are on PROD branch, no commits allowed";
elif [[  "$branch" != WR*  ]]; then
   echo "Branch name '$branch' is incorrect format."
   echo "Needs format:WRNNNN-Some-Text";
else
  message=$(echo "$branch"|cut -d- -f2-);
  wr=$(echo "WR33435-This-is-it"|cut -d- -f1);
  wr=$(echo "[#$wr]")
  #echo "git commit -m \"$wr $message\"";
  if [ "$demo" == "yes" ];
  then
   echo git commit -m "$wr $message";
   echo git push -u origin $branch; 
  else 
    #echo process loop
    if  git commit -m "$wr $message" 
    then
      git push -u origin $branch;
    fi
  fi
fi
exit 0
